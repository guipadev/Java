package com.dev.app.views;

import java.util.Optional;

import com.dev.app.RedflixApplication;
import com.dev.app.controllers.SpringContext;
import com.dev.app.models.Pelicula;
import com.dev.app.repositorys.IPeliculaRepository;

public class Ventana extends javax.swing.JFrame {
    
    IPeliculaRepository peliculaRepository;

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        
    	initComponents();
        
        String [] args = {};
        
        RedflixApplication.runSpringServer(args);
         
        peliculaRepository = SpringContext.getBean(IPeliculaRepository.class);
        
        btGuardar.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        pelAno = new javax.swing.JTextField();
        btCrear = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        btConsultar = new javax.swing.JButton();
        btLimpiar = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        lbNotificaciones = new javax.swing.JLabel();
        pelId = new javax.swing.JFormattedTextField();
        pelDirId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        pelResumen = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        pelTitulo = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("id Pelicula");

        jLabel3.setText("Titulo");

        jLabel4.setText("DirId");

        jLabel5.setText("Resumen");
        jLabel5.setToolTipText("");

        jLabel7.setText("AÃ±o");

        btCrear.setText("Crear");
        btCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCrearActionPerformed(evt);
            }
        });

        btEliminar.setText("Eliminar");
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        btConsultar.setText("Consultar");
        btConsultar.setActionCommand("");
        btConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConsultarActionPerformed(evt);
            }
        });

        btLimpiar.setText("Limpiar");
        btLimpiar.setToolTipText("");
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });

        btGuardar.setText("Actualizar");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        pelId.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        pelId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pelIdActionPerformed(evt);
            }
        });

        pelResumen.setColumns(20);
        pelResumen.setLineWrap(true);
        pelResumen.setRows(2);
        jScrollPane1.setViewportView(pelResumen);

        pelTitulo.setColumns(20);
        pelTitulo.setLineWrap(true);
        pelTitulo.setRows(2);
        jScrollPane2.setViewportView(pelTitulo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3)
                                            .addComponent(lbNotificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pelId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btCrear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(pelAno, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(pelDirId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(71, 71, 71)
                                                .addComponent(jLabel4)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 409, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btGuardar)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCrear)
                    .addComponent(btEliminar)
                    .addComponent(btConsultar)
                    .addComponent(btLimpiar)
                    .addComponent(pelId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pelDirId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pelAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbNotificaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btGuardar)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCrearActionPerformed
        crear();
    }//GEN-LAST:event_btCrearActionPerformed

    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        if(!pelId.getText().equals("")){
            eliminar();
        }
    }//GEN-LAST:event_btEliminarActionPerformed

    private void btConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConsultarActionPerformed
        if(!pelId.getText().equals("")){
            buscarPorId();
            pelId.setEnabled(true);
        }
        else{
            lbNotificaciones.setText("No ha digitado ningun id");
        }
    }//GEN-LAST:event_btConsultarActionPerformed

    private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btLimpiarActionPerformed

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        actualizar();
    }//GEN-LAST:event_btGuardarActionPerformed

    private void pelIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pelIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pelIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btConsultar;
    private javax.swing.JButton btCrear;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbNotificaciones;
    private javax.swing.JTextField pelAno;
    private javax.swing.JTextField pelDirId;
    private javax.swing.JFormattedTextField pelId;
    private javax.swing.JTextArea pelResumen;
    private javax.swing.JTextArea pelTitulo;
    // End of variables declaration//GEN-END:variables
    
    public void limpiarCamposParaCreacion(){
        pelId.setEnabled(false);
        btCrear.setEnabled(false);
        pelTitulo.setText("");
        pelResumen.setText("");
        pelAno.setText("");
        pelId.setText("");
        pelDirId.setText("");
        lbNotificaciones.setText("");
    }

    public void limpiarCampos(){
        pelId.setEnabled(true);
        btCrear.setEnabled(true);
        pelTitulo.setText("");
        pelResumen.setText("");
        pelAno.setText("");
        pelId.setText("");
        pelDirId.setText("");
        lbNotificaciones.setText("");
        btGuardar.setEnabled(false);
    }
    
    private void buscarPorId() {
        
    	Long id = Long.parseLong(pelId.getText());
        
    	Optional<Pelicula> optionalPelicula = peliculaRepository.findById(id);
        
    	if(optionalPelicula.isPresent()){
            Pelicula pelicula = optionalPelicula.get();
            pelTitulo.setText(pelicula.getPelTitulo());
            pelResumen.setText(pelicula.getPelResumen());
            pelAno.setText(pelicula.getPelAno());
            pelDirId.setText(pelicula.getDirId().toString());
            
            lbNotificaciones.setText(
                    "La pelicula con id " + pelId.getText() + 
                            " se ha encontrado");
            
            btGuardar.setEnabled(true);
        }
        else{
            // Error cuando no existe el id
            lbNotificaciones.setText(
                    "La pelicula con id " + pelId.getText() + 
                            " no existe en la base de datos");
        }
    }

    private Pelicula obtenerDatosDeFormulario(){
        Pelicula pelicula = new Pelicula();
        pelicula.setPelTitulo(pelTitulo.getText());
        pelicula.setPelAno(pelAno.getText());
        pelicula.setPelResumen(pelResumen.getText());
        pelicula.setDirId(Long.parseLong(pelDirId.getText()));
        return pelicula;
    }
    
    private void crear() {
        Pelicula pelicula = obtenerDatosDeFormulario();
        
        
        StringBuffer respuesta = new StringBuffer();
        
        try{
            Long id = Long.parseLong(pelId.getText());
            Optional<Pelicula> optionalPelicula = peliculaRepository.findById(id);
            if(optionalPelicula.isPresent()){
                lbNotificaciones.setText("La pelicula con id " + pelId.getText() + " ya existe en la base de datos y no puede ser creada");           
            }else{
                if(pelId.getText().equals("")){
                    id = null;
                    respuesta.append("Se creÃ³ la pelicula con id ");
                }else{
                    id = null;//Long.parseLong(pelId.getText());
                    respuesta.append("Se creÃ³ la pelicula con id ");
                }
                
                try{
                
                	pelId.setText("");
                	pelicula.setPelId(id);
                	peliculaRepository.save(pelicula); // Guarda el usuario obtenido del formulario
                	respuesta.append(pelicula.getPelId()); //
                	pelId.setText(pelicula.getPelId().toString());
                	
                	//limpiarCampos();
                	lbNotificaciones.setText(respuesta.toString());
                }
                
                catch(Exception e){
                    limpiarCampos();
                    lbNotificaciones.setText("Ocurrio un error al guardar la pelicula");
                }
            }
        }catch(Exception e){
            
        	Long id;
            
        	if(pelId.getText().equals("")){
                id = null;
                respuesta.append("Se creÃ³ la pelicula con id ");
            } else{
                id = null;//Long.parseLong(pelId.getText());
                respuesta.append("Se actualizÃ³ la pelicula con id ");
            }
            
        	pelicula.setPelId(id);

            try{
                pelId.setText("");
                peliculaRepository.save(pelicula); // Guarda el usuario obtenido del formulario
                respuesta.append(pelicula.getPelId()); //
                pelId.setText(pelicula.getPelId().toString());
                //limpiarCampos();
                btGuardar.setEnabled(false);
                lbNotificaciones.setText(respuesta.toString());
            } catch(Exception a){
                limpiarCampos();
                lbNotificaciones.setText("Ocurrio un error al guardar la pelicula");
            }
        }
    }
    
    private void actualizar() {
        
    	Pelicula pelicula = obtenerDatosDeFormulario();
        
        Long id;
        
        StringBuffer respuesta = new StringBuffer();
        
        if(pelId.getText().equals("")){
            id = null;
            respuesta.append("Se creÃ³ la pelicula con id ");
        } else{
            id = Long.parseLong(pelId.getText());
            respuesta.append("Se actualizÃ³ la pelicula con id ");
        }
        
        
//        String a = "";
//        a = a + "3";
//        a = a + "4";
        
        pelicula.setPelId(id);
                
        try{
            peliculaRepository.save(pelicula); // Guarda el usuario obtenido del formulario
            respuesta.append(pelicula.getPelId()); //
            pelId.setText(pelicula.getPelId().toString());
            limpiarCampos();
            btGuardar.setEnabled(false);
            lbNotificaciones.setText(respuesta.toString());
        } catch(Exception e){
            limpiarCampos();
            lbNotificaciones.setText("Ocurrio un error al guardar la pelicula");
        }
    }
   
    public void eliminar(){
        Long id = Long.parseLong(pelId.getText());
        
        try{
            peliculaRepository.deleteById(id);
            limpiarCampos();
            lbNotificaciones.setText("Se eliminÃ³ la pelicula con id " + id);
        } catch(Exception e){
            limpiarCampos();
            lbNotificaciones.setText("Ocurrio un error al eliminar la pelicula con id " + id);
        }        
    }    
}